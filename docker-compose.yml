version: "3.3"

services:

  traefik:
    image: traefik:1.5.2
    command: --web --docker --docker.domain=docker.localhost #--logLevel=DEBUG
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./conf/traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./data/traefik/acme:/etc/traefik/acme
    labels:
      - traefik.enable=false

  namenode:
    image: dmitryzagr/hadoop-namenode:hadoop3.0.0-java8
    hostname: namenode
    ports:
      - 50070:9870
    volumes:
      - ./data/namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    labels:
      - traefik.enable=false

  datanode_1:
    image: dmitryzagr/hadoop-datanode:hadoop3.0.0-java8
    volumes:
      - ./data/datanode_1:/hadoop/dfs/data
      - ./data/archives/:/root/hadoop_data
    env_file:
      - ./hadoop-hive.env
    depends_on:
      - namenode
    labels:
      - traefik.enable=false

  datanode_2:
    image: dmitryzagr/hadoop-datanode:hadoop3.0.0-java8
    volumes:
      - ./data/datanode_2:/hadoop/dfs/data
      - ./data/archives/:/root/hadoop_data
    env_file:
      - ./hadoop-hive.env
    depends_on:
      - namenode
    labels:
      - traefik.enable=false

  spark-master:
    image: dmitryzagr/spark-master:2.2.0-hadoop3.0.0-java8
    hostname: spark-master
    ports:
      - "8989:8080"
    volumes:
      - ./conf/zeppelin/conf/hadoop/core-site.xml:/opt/hadoop-3.0.0/etc/hadoop/core-site.xml:ro
    env_file:
      - ./hadoop-hive.env
    depends_on:
      - namenode
    labels:
      - traefik.enable=false

  spark-worker:
    image: dmitryzagr/spark-worker:2.2.0-hadoop3.0.0-java8
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    env_file:
      - ./hadoop-hive.env
      - ./spark.env
    volumes:
      - ./conf/zeppelin/conf/hadoop/core-site.xml:/opt/hadoop-3.0.0/etc/hadoop/core-site.xml:ro
    labels:
      - traefik.enable=false

  hive-server:
    image: dmitryzagr/hadoop-hive:2.3.2-hadoop3.0.0-java8
    hostname: hive-server
    env_file:
      - ./hadoop-hive.env
    environment:
      - "HIVE_CORE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore/metastore"
    depends_on:
      - namenode
      - hive-metastore
    labels:
      - traefik.enable=false

  hive-metastore:
    image: dmitryzagr/hadoop-hive:2.3.2-hadoop3.0.0-java8
    hostname: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    depends_on:
      - hive-metastore-postgresql
    labels:
      - traefik.enable=false

  hive-metastore-postgresql:
    image: dmitryzagr/hive-metastore-postgresql:2.3.2-hadoop3.0.0-java8
    hostname: hive-metastore-postgresql
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    labels:
      - traefik.enable=false

  zeppelin:
    image: dmitryzagr/zeppelin:0.7.3-hadoop3.0.0
    environment:
      - ZEPPELIN_LOG_DIR=/logs
      - ZEPPELIN_NOTEBOOK_DIR=/notebook
      - ZEPPELIN_SERVER_CONTEXT_PATH=/zeppelin
    volumes:
      - ./conf/zeppelin/interpreter.json:/zeppelin/conf/interpreter.json
      - ./conf/zeppelin/conf/shiro.ini:/zeppelin/conf/shiro.ini
      - ./conf/zeppelin/conf/zeppelin-site.xml:/zeppelin/conf/zeppelin-site.xml
      - ./data/zeppelin/logs:/logs
      - ./data/zeppelin/notebook:/notebook
    labels:
     - "traefik.backend=zeppelin"
     - "traefik.backend.loadbalancer.sticky=true"
     - "traefik.frontend.rule=PathPrefix:/zeppelin"
     - "traefik.enable=true"
     - "traefik.port=8080"

  openldap:
    image: 10.72.103.217:5000/1c/openldap:1.1.9
    entrypoint: /container/service/docker-entrypoint.sh
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "1C"
      LDAP_DOMAIN: "base.com"
      LDAP_BASE_DN: "dc=base,dc=com"
      LDAP_ADMIN_PASSWORD: "adminpassword"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "false"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "hdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
      #Cron expression to schedule OpenLDAP config backup. Set to "every 10 minutes"
      LDAP_BACKUP_CONFIG_CRON_EXP: "*/10 * * * *"
      #Cron expression to schedule OpenLDAP data backup. Set to "every 10 minutes"
      LDAP_BACKUP_DATA_CRON_EXP: "*/10 * * * *"
      #Backup TTL in days
      LDAP_BACKUP_TTL: "15"
      ADD_DEFAULT_NODES_TIMEOUT: "60"   #in seconds
    stdin_open: true
    volumes:
      - ./data/openldap/var:/var/lib/ldap
      - ./data/openldap/etc:/etc/ldap/slapd.d
      - ./data/openldap/container:/container/service/slapd/assets/certs/
      - ./data/openldap/backup:/data/backup
    #domainname: "base.com" # important: same as hostname
    #hostname: "base.com"
    labels:
      - "traefik.enable=false"

  keycloak:
    image: 10.72.103.217:5000/1c/keycloak-openshift:3.4.0.Final
    entrypoint:
      - start-keycloak.sh
      - -Dkeycloak.migration.action=import
      - -Dkeycloak.migration.provider=dir
      - -Dkeycloak.migration.strategy=IGNORE_EXISTING
      - -Dkeycloak.migration.dir=/opt/jboss/keycloak/realms/
      - -Djboss.bind.address=0.0.0.0
    environment:
      - POSTGRES_PORT_5432_TCP_ADDR=postgres
      - POSTGRES_PORT_5432_TCP_PORT=5432
      - POSTGRES_DATABASE=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
      - PROXY_ADDRESS_FORWARDING=true
      - CHE_REDIRECT_URIS="http://10.70.2.104/*"
      - CHE_WEB_ORIGINS="http://10.70.2.104"
      - LDAP_BASE_DN=dc=base,dc=com
      - LDAP_PASSWORD=adminpassword
    #volumes:
      #- './data/keycloak:/opt/jboss/keycloak/standalone/data:rw'
      #- './logs/keycloak:/opt/jboss/keycloak/standalone/log:rw'
    labels:
      - "traefik.backend=keycloak"
      - "traefik.backend.loadbalancer.sticky=true"
      - "traefik.frontend.rule=PathPrefix:/auth"
      - "traefik.port=8080"
      - "traefik.enable=true"

  postgres:
    image: 10.72.103.217:5000/1c/postdock-pgsql:9.6
    environment:
      POSTGRES_PASSWORD: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_DB: keycloak
      CHE_POSTGRES_USERNAME: pgche
      CHE_POSTGRES_PASSWORD: pgchepassword
      CHE_POSTGRES_DATABASE: dbche
      PARTNER_NODES: "postgres"
      NODE_ID: 1
      NODE_NAME: node1
      CLUSTER_NODE_NETWORK_NAME: postgres #(default: hostname of the node)
      NODE_PRIORITY: 100  #(default: 100)
      SSH_ENABLE: 1
      CLEAN_OVER_REWIND: 0
      CONFIGS: "listen_addresses:'*',max_replication_slots:5"
                                  # in format variable1:value1[,variable2:value2[,...]]
                                  # used for pgpool.conf file
            #defaults:
            #CLUSTER_NAME: pg_cluster # default is pg_cluster
            #REPLICATION_DB: replication_db # default is replication_db
            #REPLICATION_USER: replication_user # default is replication_user
            #REPLICATION_PASSWORD: replication_pass # default is replication_pass
    volumes:
      - './data/postgres:/var/lib/postgresql/data'
      #- './config/postgres/init-che-user.sh:/docker-entrypoint-initdb.d/init-che-user.sh'
    healthcheck:
        test: [ "CMD", "/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U keycloak -q -d keycloak -c 'SELECT 1'" ]
        interval: 10s
        timeout: 10s
        retries: 10
    labels:
      - "traefik.enable=false"
